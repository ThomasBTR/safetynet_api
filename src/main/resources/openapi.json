{
  "openapi": "3.0.0",
  "info": {
    "title": "SafetyNet Alerts App",
    "description": "SafetyNet Alerts App is design to help safety teams saving lives by providing updated data from their juridiction. This app will provide data on persons, their whereabouts when their is a danger.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/",
      "description": "Basepath of the api"
    }
  ],
  "paths": {
    "/firestation": {
      "get": {
        "tags": [
          "Station Number"
        ],
        "summary": "Retourne la liste des personnes couverte par la caserne de pompier correspondante.",
        "operationId": "getPersonsInfosFromFirestationID",
        "parameters": [
          {
            "name": "stationNumber",
            "in": "query",
            "description": "firestation ID",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "HTTP_Request/GET/firestation.get.schema.json"
                }
              }
            }
          }
        }
      }
    },
    "/childAlert": {
      "get": {
        "tags": [
          "Child Alert"
        ],
        "summary": "return a list of child living at this address",
        "operationId": "getChildrenInfoFromAddress",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "address where the childs live",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "HTTP_Request/GET/child_alert.get.schema.json"
                }
              }
            }
          }
        }
      }
    },
    "/phoneAlert": {
      "get": {
        "tags": [
          "Phone Alert"
        ],
        "summary": "return a list of phone living in the area linked to this firestation",
        "operationId": "getPhoneNumbersFromFirestationID",
        "parameters": [
          {
            "name": "firestation",
            "in": "query",
            "description": "firestation ID",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "HTTP_Request/GET/phone_alert.get.schema.json"
                }
              }
            }
          }
        }
      }
    },
    "/fire": {
      "get": {
        "tags": [
          "Fire"
        ],
        "summary": "return a list of persons living at a specific address and the firestation ID linked to this address",
        "operationId": "getPersonsInfosFromAddress",
        "parameters": [
          {
            "name": "address",
            "in": "query",
            "description": "address where the fire is started",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "HTTP_Request/GET/fire.get.schema.json"
                }
              }
            }
          }
        }
      }
    },
    "/flood/station": {
      "get": {
        "tags": [
          "Flood Station"
        ],
        "summary": "return data of persons linked to a firestation",
        "operationId": "getAllPersonsInfosFromFirestationID",
        "parameters": [
          {
            "name": "firestation",
            "in": "query",
            "description": "firestation ID",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "HTTP_Request/GET/flood_station.get.schema.json"
                }
              }
            }
          }
        }
      }
    },
    "/personInfo": {
      "get": {
        "tags": [
          "Person Info"
        ],
        "summary": "return a list of infos on a specific person",
        "operationId": "GetPersonInfos",
        "parameters": [
          {
            "name": "firstName",
            "in": "query",
            "description": "First Name of the person",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Last Name of the person",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "HTTP_Request/GET/person_info.get.schema.json"
                }
              }
            }
          }
        }
      }
    },
    "/communityEmail": {
      "get": {
        "tags": [
          "Community Email"
        ],
        "summary": "return a mailing list of the persons living in the city passed as parameter",
        "operationId": "GetMailingListFromCity",
        "parameters": [
          {
            "name": "city",
            "in": "query",
            "description": "city from which the mailinglist is requested",
            "required": true,
            "allowEmptyValue": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "$ref": "HTTP_Request/GET/city_mailing_list.get.schema.json"
                }
              }
            }
          }
        }
      }
    }
  }
}
